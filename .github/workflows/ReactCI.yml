  # This is a basic workflow to help you get started with Actions
  name: react-CI

  on:
    # Triggers the workflow on push or pull request events but only for the main branch
    push:
      branches: [main,develop]
    pull_request:
      branches: [main,develop]

  jobs:

      # env  
      #secrets.DISCORD_WEBHOOK_URL
      #secrets.DOCKERHUB_TOKEN
      #secrets.DOCKERUSERNAME
      #secrets.DOCKER_REPO
      
      
      

    # This workflow contains multiple jobs
    build_test:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      strategy:
        matrix:
          node-version: [20.x]

      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

        - name: Discord notification
          env:
            DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
          uses: Ilshidur/action-discord@master
          with:
            args: 'The {{ GITHUB_JOB_NAME }} Stage {{ EVENT_PAYLOAD.repository.full_name }} on Branch ${{ github.ref_slug }} With commit hash -${GITHUB_SHA::8}  has been Started .'
    
        - uses: actions/checkout@v3





        - name: setup node
          uses: actions/setup-node@master
          with:
            node-version: ${{ matrix.node-version }}

        # install applicaion dependencies
        - name: Install dependencies
          run: npm install
          
        # build and test the apps
        - name: Run the tests
          run: npm test
          
        - name: Build
          run: npm run build
          
        - name: Share artifact inside workflow
          uses: actions/upload-artifact@v3
          with:
            name: react-github-actions-build
            path: build



        - name: Notify Discord on success
          if: ${{ success() }}
          env:
            DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
          uses: Ilshidur/action-discord@master
          with:
            args: 'The {{ GITHUB_JOB_NAME }} Stage {{ EVENT_PAYLOAD.repository.full_name }} on Branch ${{ github.ref_slug }} With commit hash -${GITHUB_SHA::8}  has been Succeeded  .'
    
        - name: Notify Discord on failure
          if: ${{ failure() }}
          env:
            DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
          uses: Ilshidur/action-discord@master
          with:
            args: 'The {{ GITHUB_JOB_NAME }} Stage {{ EVENT_PAYLOAD.repository.full_name }} on Branch ${{ github.ref_slug }} With commit hash -${GITHUB_SHA::8}  has been Failed  .'

    lint:
      defaults:
        run:
          shell: bash
        
      runs-on: ubuntu-latest
      steps:    

      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'The {{ GITHUB_JOB_NAME }} Stage {{ EVENT_PAYLOAD.repository.full_name }} on Branch ${{ github.ref_slug }} With commit hash -${GITHUB_SHA::8}  has been Started .'

      - uses: actions/checkout@v3



      - uses: actions/checkout@v3
        name: 'Checkout repository'

      - name: Share artifact inside workflow
        uses: actions/download-artifact@v3
        with:
          name: react-github-actions-build
          path: build

      - name: 'Run Linter'
        run: npx standard -v



      - name: Notify Discord on success
        if: ${{ success() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'The {{ GITHUB_JOB_NAME }} Stage {{ EVENT_PAYLOAD.repository.full_name }} on Branch ${{ github.ref_slug }} With commit hash -${GITHUB_SHA::8}  has been Succeeded  .'

      - name: Notify Discord on failure
        if: ${{ failure() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'The {{ GITHUB_JOB_NAME }} Stage {{ EVENT_PAYLOAD.repository.full_name }} on Branch ${{ github.ref_slug }} With commit hash -${GITHUB_SHA::8}  has been Failed  .'

          
    analyze:
      name: Analyze code
      runs-on: ubuntu-latest
      needs: [build_test]
      permissions:
        actions: read
        contents: read
        security-events: write
        

      strategy:
        fail-fast: false
        matrix:
          language: [ 'javascript' ]
          # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]

      steps:
      
      
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'The {{ GITHUB_JOB_NAME }} Stage {{ EVENT_PAYLOAD.repository.full_name }} on Branch ${{ github.ref_slug }} With commit hash -${GITHUB_SHA::8}  has been Started .'


  
      - name: Checkout repository
        uses: actions/checkout@v3

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          # queries: ./path/to/local/query, your-org/your-repo/queries@main

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

  
      # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines
      #    and modify them (or add more) to build your code if your project
      #    uses a compiled language

      #- run: |
      #   make bootstrap
      #   make release

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3


        

      - name: Notify Discord on success
        if: ${{ success() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'The {{ GITHUB_JOB_NAME }} Stage {{ EVENT_PAYLOAD.repository.full_name }} on Branch ${{ github.ref_slug }} With commit hash -${GITHUB_SHA::8}  has been Succeeded  .'

      - name: Notify Discord on failure
        if: ${{ failure() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'The {{ GITHUB_JOB_NAME }} Stage {{ EVENT_PAYLOAD.repository.full_name }} on Branch ${{ github.ref_slug }} With commit hash -${GITHUB_SHA::8}  has been Failed  .'
                    
    push_to_Docker_Hub:

      runs-on: ubuntu-latest
      # build docker image and push to docker hub
      # only if the app build and test successfully
      needs: [build_test,analyze]
      steps:

              
        - name: Discord notification
          env:
            DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
          uses: Ilshidur/action-discord@master
          with:
            args: 'The {{ GITHUB_JOB_NAME }} Stage {{ EVENT_PAYLOAD.repository.full_name }} on Branch ${{ github.ref_slug }} With commit hash -${GITHUB_SHA::8}  has been Started .'

        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Login to DockerHub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERUSERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Build and push
          uses: docker/build-push-action@v5
          with:
            context: ./
            file: ./Dockerfile
            push: true
            tags: |
              ${{ secrets.DOCKERUSERNAME }}/${{ secrets.DOCKER_REPO }}/frontend-react:latest
              ${{ secrets.DOCKERUSERNAME }}/${{ secrets.DOCKER_REPO }}/frontend-react:${{ github.ref_slug }}-${GITHUB_SHA::8}


        - name: Run the image in a container
          uses: addnab/docker-run-action@v3
          with:
            image: ${{ secrets.DOCKERUSERNAME }}/${{ secrets.DOCKER_REPO }}/frontend-react:latest
            run: |
              echo "running the docker image"





        - name: Notify Discord on success
          if: ${{ success() }}
          env:
            DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
          uses: Ilshidur/action-discord@master
          with:
            args: 'The {{ GITHUB_JOB_NAME }} Stage {{ EVENT_PAYLOAD.repository.full_name }} on Branch ${{ github.ref_slug }} With commit hash -${GITHUB_SHA::8}  has been Succeeded  .'
    
        - name: Notify Discord on failure
          if: ${{ failure() }}
          env:
            DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
          uses: Ilshidur/action-discord@master
          with:
            args: 'The {{ GITHUB_JOB_NAME }} Stage {{ EVENT_PAYLOAD.repository.full_name }} on Branch ${{ github.ref_slug }} With commit hash -${GITHUB_SHA::8}  has been Failed  .'
            
