  # This is a basic workflow to help you get started with Actions
  name: react-CI

  on:
    # Triggers the workflow on push or pull request events but only for the main branch
    push:
      branches: [main,develop]
    pull_request:
      branches: [main,develop]


  jobs:

      # env  
      #secrets.DISCORD_WEBHOOK_URL
      #secrets.DOCKERHUB_TOKEN
      #secrets.DOCKERUSERNAME
      #secrets.DOCKER_REPO
      
    notify_Discord:
      if: github.actor!= 'dependabot[bot]'
      # The type of runner that the job will run on
      runs-on: ubuntu-latest

      steps:
        - name: notify Frontend CI Workflow started
          uses: rjstone/discord-webhook-notify@v1
          with:
              severity: info
              color: '#FFFFFF'
              details: Frontend CI Workflow started!
              footer: HORRAI.
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}

      
 








      

    # This workflow contains multiple jobs
    build_test:
      if: github.actor!= 'dependabot[bot]'
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      strategy:
        matrix:
          node-version: [20.x]




   
      steps:

        - name: notify Build-test Stage started
          uses: rjstone/discord-webhook-notify@v1
          with:
              severity: info
              color: '#FFFFFF'
              details: Build-test stage Started!
              footer: HORRAI.
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
              
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

        - uses: actions/checkout@v3


        - name: setup node
          uses: actions/setup-node@master
          with:
            node-version: ${{ matrix.node-version }}

        # install applicaion dependencies
        - name: Install dependencies
          run: npm ci
          
        # build and test the apps
        - name: Run the tests
          run: npm test
          
        - name: Build
          run: npm run build
          
        - name: Share artifact inside workflow
          uses: actions/upload-artifact@v3
          with:
            name: react-github-actions-build
            path: dist




        - name: notify Frontend Discord Build-test Stage Succeeded
          uses: rjstone/discord-webhook-notify@v1
          if: success()
          with:
              severity: info
              details: Build-test stage Succeeded on Branch ${{ github.head_ref }}!
              footer: sha ${{ github.sha }} 
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
              
        - name: Test Failure
          uses: rjstone/discord-webhook-notify@v1
          if: failure()
          with:
              severity: error
              details: Build-test stage Failed on Branch ${{ github.head_ref }} !
              footer: sha ${{ github.sha }}
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
              
        - name: Test Cancelled
          uses: rjstone/discord-webhook-notify@v1
          if: cancelled()
          with:
              severity: warn
              details: Build-test stage Cancelled!
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}






    lint:
      if: github.actor!= 'dependabot[bot]'
      defaults:
        run:
          shell: bash
              
      needs: [build_test]
      runs-on: ubuntu-latest
      steps:    

        - name: notify lint started
          uses: rjstone/discord-webhook-notify@v1
          with:
              severity: info
              color: '#FFFFFF'
              details:  Lint stage started!
              footer: HORRAI!
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}

              
    


        - uses: actions/checkout@v3
          name: 'Checkout repository'
  
        - name: Share artifact inside workflow
          uses: actions/download-artifact@v3
          with:
            name: react-github-actions-build
            path: dist
  
        ################################
        # Run Linter against code base #
        ################################
        - name: Lint Code Base
          uses: super-linter/super-linter@v5
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            DISABLE_ERRORS: true


  

        - name: notify Frontend  lint Stage Succeeded
          uses: rjstone/discord-webhook-notify@v1
          if: success()
          with:
              severity: info
              details: Lint stage Succeeded on Branch ${{ github.head_ref }}!
              footer: sha ${{ github.sha }}
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
              
        - name: Test Failure
          uses: rjstone/discord-webhook-notify@v1
          if: failure()
          with:
              severity: error
              details: Lint stage Failed on Branch ${{ github.head_ref }}!
              footer: sha ${{ github.sha }}
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
              
        - name: Test Cancelled
          uses: rjstone/discord-webhook-notify@v1
          if: cancelled()
          with:
              severity: warn
              details: Lint Cancelled!
              footer: sha ${{ github.sha }}
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}




          
    analyze:
      if: github.actor!= 'dependabot[bot]'
      name: Analyze code
      runs-on: ubuntu-latest
      needs: [build_test]
      permissions:
        actions: read
        contents: read
        security-events: write
        

      strategy:
        fail-fast: false
        matrix:
          language: [ 'javascript' ]
          # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]

      steps:
      
      
      - name: notify analyze started
        uses: rjstone/discord-webhook-notify@v1
        with:
            severity: info
            color: '#FFFFFF'
            details: Analyze stage started!
            footer: HORRAI!
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}


  
      - name: Checkout repository
        uses: actions/checkout@v3

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          # queries: ./path/to/local/query, your-org/your-repo/queries@main

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

  
      # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines
      #    and modify them (or add more) to build your code if your project
      #    uses a compiled language

      #- run: |
      #   make bootstrap
      #   make release

      - name: Perform CodeQL Analysis
        uses:  github/codeql-action/analyze@v2

        

      - name: notify analyze Stage Succeeded
        uses: rjstone/discord-webhook-notify@v1
        if: success()
        with:
            severity: info
            details: Analyze stage Succeeded on Branch ${{ github.head_ref }}!
            footer: sha ${{ github.sha }}
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
            
      - name: Test Failure
        uses: rjstone/discord-webhook-notify@v1
        if: failure()
        with:
            severity: error
            details: Analyze stage Failed on Branch ${{ github.head_ref }}!
            footer: sha ${{ github.sha }}
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
            
      - name: Test Cancelled
        uses: rjstone/discord-webhook-notify@v1
        if: cancelled()
        with:
            severity: warn
            details: Analyze Cancelled!
            footer: sha ${{ github.sha }}
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}




          
                    
    push_to_Docker_Hub:
      
      if: github.actor!= 'dependabot[bot]'
      runs-on: ubuntu-latest
      # build docker image and push to docker hub
      # only if the app build and test successfully
      needs: [build_test,analyze,lint]
      steps:

              
        - name: notify Push to Dockerhub started
          uses: rjstone/discord-webhook-notify@v1
          with:
              severity: info
              color: '#FFFFFF'
              details: Push to Dockerhub stage started!
              footer: HORRAI!
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}



        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Login to DockerHub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERUSERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Build and push
          uses: docker/build-push-action@v5
          with:
            context: .
            file: ./Dockerfile
            push: true
            tags: |
              ${{ secrets.DOCKERUSERNAME }}/${{ secrets.DOCKER_REPO }}/frontend-react:latest
              ${{ secrets.DOCKERUSERNAME }}/${{ secrets.DOCKER_REPO }}/frontend-react:${{ github.head_ref }}${{ github.sha }}


        - name: Run the image in a container
          uses: addnab/docker-run-action@v3
          with:
            image: ${{ secrets.DOCKERUSERNAME }}/${{ secrets.DOCKER_REPO }}/frontend-react:latest
            run: |
              echo "running the docker image"







        - name: notify Push to Dockerhub Stage Succeeded
          uses: rjstone/discord-webhook-notify@v1
          if: success()
          with:
              severity: info
              details: Push to DockerHub stage Succeeded on Branch ${{ github.head_ref }}!
              footer: sha ${{ github.sha }}
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
              
        - name: Test Failure
          uses: rjstone/discord-webhook-notify@v1
          if: failure()
          with:
              severity: error
              details: Push to DockerHub stage Failed on Branch ${{ github.head_ref }}!
              footer: sha ${{ github.sha }}
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
              
        - name: Test Cancelled
          uses: rjstone/discord-webhook-notify@v1
          if: cancelled()
          with:
              severity: warn
              details: Push to DockerHub Cancelled!
              footer: sha ${{ github.sha }}
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}

